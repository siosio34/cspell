{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {},
  "properties": {
    "autoFix": {
      "default": false,
      "description": "Automatically fix common mistakes. This is only possible if a single preferred suggestion is available.",
      "type": "boolean"
    },
    "checkComments": {
      "default": true,
      "description": "Spell check comments",
      "type": "boolean"
    },
    "checkIdentifiers": {
      "default": true,
      "description": "Spell check identifiers (variables names, function names, class names, etc.)",
      "type": "boolean"
    },
    "checkJSXText": {
      "default": true,
      "description": "Spell check JSX Text",
      "type": "boolean"
    },
    "checkStringTemplates": {
      "default": true,
      "description": "Spell check template strings",
      "type": "boolean"
    },
    "checkStrings": {
      "default": true,
      "description": "Spell check strings",
      "type": "boolean"
    },
    "cspell": {
      "additionalProperties": false,
      "description": "CSpell options to pass to the spell checker.",
      "properties": {
        "flagWords": {
          "description": "List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample: ```ts \"flagWords\": [   \"color: colour\",   \"incase: in case, encase\",   \"canot->cannot\",   \"cancelled->canceled\" ] ```",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreWords": {
          "description": "List of words to be ignored. An ignored word will not show up as an error, even if it is also in the `flagWords`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "words": {
          "description": "List of words to be considered correct.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "customWordListFile": {
      "anyOf": [
        {
          "description": "Specify a path to a custom word list file",
          "type": "string"
        },
        {
          "additionalProperties": false,
          "properties": {
            "path": {
              "description": "Path to word list file. File format: 1 word per line",
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "type": "object"
        }
      ],
      "description": "Specify a path to a custom word list file.\n\nexample: ```js customWordListFile: \"./myWords.txt\" ```"
    },
    "debugMode": {
      "default": false,
      "description": "Output debug logs",
      "type": "boolean"
    },
    "generateSuggestions": {
      "default": true,
      "description": "Generate suggestions",
      "type": "boolean"
    },
    "ignoreImportProperties": {
      "default": true,
      "description": "Ignore the properties of imported variables, structures, and types.\n\nExample: ``` import { example } from 'third-party';\n\nconst msg = example.property; // `property` is not spell checked. ```",
      "type": "boolean"
    },
    "ignoreImports": {
      "default": true,
      "description": "Ignore import and require names",
      "type": "boolean"
    },
    "numSuggestions": {
      "default": 8,
      "description": "Number of spelling suggestions to make.",
      "type": "number"
    }
  },
  "required": [
    "numSuggestions",
    "generateSuggestions",
    "autoFix"
  ],
  "type": "object"
}